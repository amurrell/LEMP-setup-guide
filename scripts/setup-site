#!/usr/bin/env bash
cr=`echo $'\n.'`
cr=${cr%.}

# Check for Nginx Conf things
if [ ! -d "/etc/nginx" ]; then  
    printf "Does not seem that nginx is installed properly, cannot install a site.\n"
    exit 1
fi

# Prompt for things
## Set up a site?
read -p "Do you want to setup a site? " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    printf "Okay, stopping script. Things are installed... carry on. Set up a site later using ./setup-site in scripts folder.\n"
    exit 1;
fi

## D - Domain
read -p "Your Domain, ie: yoursite.com $cr" DOMAIN

if [ "$DOMAIN" == '' ]; then
    printf "You must specify a domain, ie: yoursite.com\n"
    exit 1
fi

if [ -d "/var/www/$DOMAIN" ]; then
    printf "A folder for this domain already exists, delete/back it up first.\n"
    exit 1
fi

echo "$DOMAIN" >> tempdomain.txt
sed -i 's/\./_/g' tempdomain.txt
DOMAIN_COM=$(cat tempdomain.txt)
rm tempdomain.txt

# PROMPT - Github Repo URL
read -p "Your Github/Bitbucket Repo (use ssh url git@github.com:youruser/yourrepo.git):" GITHUB

# SSH - check it exists?
if [ ! -d "/root/.ssh" ]; then  
    printf "You do not have an ~/.ssh folder, so worried that you don't have this setup properly\n"
    printf "If using a git repo, probably use the HTTPS url.\n"
fi

# SSH - check for ssh-add -L to see if we have ssh keys loaded (from port forwarding or ssh-agent in docker)
if [ -d "/root/.ssh" ]; then  
    ssh-add -L | grep 'Could not open a connection to your authentication agent' &> /dev/null
    if [ $? == 0 ]; then
        printf "here i am\n"
        WHO=$('whoami')
        cp /root/tempssh/* /root/.ssh/ -R
        chown $WHO:$WHO ~/.ssh/* -R
        eval `ssh-agent -s`
        ssh-add
    fi
fi

# GIT REPO - setup a git repo if we have ssh
if [ ! "$GITHUB" == "" ] && [ -d "/root/.ssh" ]; then
    cd /var/www
    git clone "$GITHUB" "$DOMAIN"
else
    cd /var/www/
    mkdir "$DOMAIN"
    printf "Without a github repo or ssh setup, you are responsible for putting your files into /var/www/$DOMAIN\n" 
fi

# NGINX - Proxy or not to proxy?
read -p "Do you need to setup nginx with upstreams and php?" -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    # Create nginx site config with PHP upstreams
    cp /var/www/LEMP-setup-guide/config/site.nginx.conf /etc/nginx/sites-available/"$DOMAIN.conf"
    cd /etc/nginx/sites-available/
    sed -i "s/SITEDOTCOM/${DOMAIN}/g;" "$DOMAIN.conf"
    sed -i "s/SITE_COM/${DOMAIN_COM}/g;" "$DOMAIN.conf"
    ln -s /etc/nginx/sites-available/"${DOMAIN}.conf" /etc/nginx/sites-enabled/
else
    # Create nginx config with proxy pass
    cp /var/www/LEMP-setup-guide/config/site.nginx.proxy.conf /etc/nginx/sites-available/"$DOMAIN.conf"
    cd /etc/nginx/sites-available/
    sed -i "s/SITEDOTCOM/${DOMAIN}/g;" "$DOMAIN.conf"
    sed -i "s/SITE_COM/${DOMAIN_COM}/g;" "$DOMAIN.conf"
    ln -s /etc/nginx/sites-available/"${DOMAIN}.conf" /etc/nginx/sites-enabled/
fi

# TEST nginx
sudo nginx -t
# Try to reload nginx
sudo service nginx reload

# No PHP?
read -p "Do you need to set up PHP FPM pools?" -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    printf "Okay, stopping script then.\n"
    exit 1
fi

# Create php site config
mkdir -p /etc/php/7.2/fpm/pool.d/
cp /var/www/LEMP-setup-guide/config/site.php-fpm.conf /etc/php/7.2/fpm/pool.d/"$DOMAIN.conf"
cd /etc/php/7.2/fpm/pool.d/
sed -i "s/SITEDOTCOM/${DOMAIN}/g;" "$DOMAIN.conf"
sed -i "s/SITE_COM/${DOMAIN_COM}/g;" "$DOMAIN.conf"

# PROMPT for PHP ENV VARS
read -p "Do you want to setup PHP environmental variables for a mysql database? " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    
    # PROMPT for DATABASE_NAME
    read -p "Your database name, ie: site_com: $cr" DATABASE_NAME
    # PROMPT for DATABASE_USER
    read -p "Your database user, ie: site.com $cr" DATABASE_USER
    # PROMPT for DATABASE_PASS
    read -p "Your database password, ie: cRaZyPaSs $cr" DATABASE_PASS
    # PROMPT for DATABASE_HOST
    read -p "Your database host, ie: localhost $cr" DATABASE_HOST
    # PROMPT for DATABASE_PORT
    read -p "Your database host, ie: 3306 $cr" DATABASE_PORT


    sed -i "s/DATABASENAME/${DATABASE_NAME}/g;" "$DOMAIN.conf"
    sed -i "s/DATABASEUSER/${DATABASE_USER}/g;" "$DOMAIN.conf"
    sed -i "s/DATABASEHOST/${DATABASE_HOST}/g;" "$DOMAIN.conf"
    sed -i "s/DATABASEPASS/${DATABASE_PASS}/g;" "$DOMAIN.conf"
    sed -i "s/DATABASEPORT/${DATABASE_PORT}/g;" "$DOMAIN.conf"

    # test php
    sudo php-fpm7.2 -t

    # restart php
    sudo service php7.2-fpm reload

    read -p "Do you want to setup a local mysql database using the info for php env vars above? " -n 1 -r
    echo    # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]
    then

        # PROMPT for MYSQLROOTUSER
        read -p "Your mysql root user, ie: root $cr" MYSQLROOTUSER

        # PROMPT for MYSQLROOTPASS
        read -p "Your mysql root pass, ie: 1234 $cr" MYSQLROOTPASS

        mysql -u $MYSQLROOTUSER -p$MYSQLROOTPASS -e "CREATE DATABASE ${DATABASE_NAME};"
        mysql -u $MYSQLROOTUSER -p$MYSQLROOTPASS -e "GRANT ALL PRIVILEGES ON ${DATABASE_NAME}.* TO '${DATABASE_USER}'@'localhost' IDENTIFIED BY '${DATABASE_PASS}';"

    fi
fi


